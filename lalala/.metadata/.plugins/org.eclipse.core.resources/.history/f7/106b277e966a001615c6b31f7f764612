import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class Text01 {

public static void main(String[] args) {
		/*p("aaa".matches("..."));
		p("a5678d".replaceAll("\\d", "-"));
		Pattern p = Pattern.compile("[a-z]{3}");
		Matcher m = p.matcher("fad");
		p(m.matches());
		p("fad".matches("[a-z]{3}"));
		*/
		
		//初步认识 .所有字符 *零个或多个 +一个或多个?一个或一个也没有
		/*p("aa".matches(".."));
		p("".matches("a*"));
		p("aa".matches("a*"));
		p("aa".matches("a+"));*/		
//		p("109.178.202.125".matches("\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}"));
		
		/*p("A".matches("[ABC]"));
		p("A".matches("[^ABC]"));
		p("A".matches("[a-zA-Z]"));
		p("A".matches("[A-Z&&[DFG]]"));
		p("A".matches("[A-Z&&[^D-G]]"));
		*/
		//初步认识 
/*		\d 数字[0-9]
		\D非数字 
		\s空白字符：[ \t\n\x0B\f\r] 
		\S 非空白字符：[ \t\n\x0B\f\r] 
		\w单词字符：[a-zA-Z_0-9]  
		\W  非单词字符：[a-zA-Z_0-9] 
*/		
		/*p(" \n\r\t".matches("\\s{4}"));
		p("\\".matches("\\\\"));//必须特别注意
*/
		//初步认识边界匹配
	/*
	^	行的开头
	$	行的结尾
	\b	单词边界
	\B	非单词边界
	\A	输入的开头
	\G	上一个匹配的结尾
	\Z	输入的结尾，仅用于最后的结束符（如果有的话）
	\z	输入的结尾*/
	p("hello sir".matches("^h[a-z]{4}\\b.*"));
	//空白行
	p(" \n".matches("^[\\s&&[^\\n]*\\n$"));
}

public static void p(Object a){
	System.out.println(a);
}
}

